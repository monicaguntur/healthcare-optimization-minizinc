enum DISTRICT;
enum FACILITY;
enum ISSUE;
array[DISTRICT,FACILITY] of int: NumFacilityHist;
array[FACILITY,ISSUE] of int: numIssues;
array[FACILITY] of int: cost;

array[DISTRICT,ISSUE,FACILITY] of int : numIssuesHist = array3d(DISTRICT,ISSUE,FACILITY,[
12468,35315,0,278,18212,23466,0,919,262,954,24,76,6,0,45,33,277,8,10,196,847,3269,150,0,2260,394,47,0,0,30,554,1071,50,0,575,
10001,45773,0,182,18585,950,0,949,125,1470,17,139,4,0,41,39,335,4,9,138,702,3019,150,0,1681,114,267,11,0,36,733,2883,20,0,1292,
8977,31453,0,184,14334,1029,0,977,228,892,24,108,7,0,30,40,262,4,9,66,743,2683,181,0,906,36,273,0,0,28,282,1990,10,0,401,
6016,26321,0,227,12953,706,0,1379,216,0,16,279,0,0,87,34,539,6,6,194,2139,3378,154,0,1010,10,218,6,0,32,435,5025,21,0,1194,
6436,34883,0,156,19543,1926,0,984,327,122,12,195,14,0,81,20,379,5,5,209,480,3403,96,0,1241,15,261,7,0,91,338,1734,23,0,1305,
7279,28951,0,163,11569,1006,0,691,260,1300,10,298,14,0,81,21,417,3,10,131,406,3196,78,0,771,10,394,11,0,87,379,5855,33,0,1378,
6032,41541,0,222,20488,1013,0,817,227,0,60,233,0,0,0,87,435,16,16,0,439,3767,130,0,1722,144,281,0,0,87,342,1755,40,0,782,
5019,11616,0,189,13766,695,0,752,196,909,8,113,3,0,104,16,205,3,3,161,1027,877,134,0,2310,45,128,35,0,105,191,722,36,0,1130,
6277,11603,0,219,12390,372,0,422,139,1517,21,188,2,0,53,32,303,3,17,106,457,1308,102,0,766,17,46,7,0,67,139,362,16,0,338,
4314,12665,0,255,11445,998,0,609,138,0,38,91,20,0,23,45,140,4,9,72,726,743,121,0,777,50,133,5,0,53,205,3741,38,0,476,
9530,27397,0,174,20378,1154,0,707,131,18753,24,107,29,0,148,42,379,12,6,212,566,3040,133,0,1404,5,119,5,0,156,348,2958,42,0,865,
8150,33543,0,158,13440,560,0,763,172,854,16,321,3,0,134,43,713,9,0,271,661,4558,156,0,2007,25,198,51,0,157,266,1833,37,0,2395,
6741,46800,0,343,11661,913,0,565,810,0,46,275,3,0,141,42,504,5,0,210,572,4132,91,0,1107,85,781,53,0,195,247,2340,30,0,686]);

array[DISTRICT,FACILITY] of var 1..1000: numfacilities;

var int: budget;
constraint budget = sum(i in DISTRICT, j in FACILITY)(numfacilities[i,j] * cost[j]);

constraint forall(i in DISTRICT, j in ISSUE)((sum(k in FACILITY)(numIssues[k,j]*numfacilities[i,k]) >= sum(l in FACILITY)(numIssuesHist[i,j,l]*NumFacilityHist[i,l])));

var int : oldBudget;
constraint oldBudget = sum(i in DISTRICT, j in FACILITY)(NumFacilityHist[i,j]*cost[j]);

array[DISTRICT] of int: SCpop;
array[DISTRICT] of int: PHCpop;
constraint forall(i in DISTRICT)(numfacilities[i,to_enum(FACILITY,4)] >= SCpop[i]);
constraint forall(i in DISTRICT)(numfacilities[i,to_enum(FACILITY,3)] >= PHCpop[i]);

solve minimize budget;
